apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven'
//apply plugin: "io.gitlab.arturbosch.detekt"

/*ext {
    bintrayRepo = 'maven'
    bintrayName = POM_ARTIFACT_ID

    publishedGroupId = POM_GROUP_ID
    libraryName = 'Android Material App Rating'
    artifact = POM_ARTIFACT_ID

    libraryDescription = 'This library allows to use customized Rating Dialog inside applications.'

    siteUrl = 'https://github.com/stepstone-tech/android-material-app-rating'
    gitUrl = 'https://github.com/stepstone-tech/android-material-app-rating.git'

    libraryVersion = POM_VERSION

    developerId = 'pglebocki'
    developerName = 'Piotr Głębocki'
    developerEmail = 'Piotr.Glebocki@stepstone.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}*/

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '28.0.3'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation("com.android.support:appcompat-v7:28.0.0")
    implementation("com.android.support:support-annotations:28.0.0")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version")

//    detekt "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
}

/*gradle.taskGraph.beforeTask { Task task ->
    if (task instanceof Javadoc) {
        def releaseVariant = android.libraryVariants.find { it.buildType.name == 'release' }
        Javadoc javadocTask = (Javadoc) task
        javadocTask.source = android.sourceSets.main.java.srcDirs
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        javadocTask.classpath = files(releaseVariant.javaCompile.classpath.files) + files(ext.androidJar)
    }
}*/

tasks.withType(Javadoc).all {
    excludes = ['**/*.kt']
}

//apply from: '../installv1.gradle'
//apply from: '../bintrayv1.gradle'
repositories {
    mavenCentral()
    google()
}

//detekt {
//    profile("main") {
//        input = "$project.projectDir"
//        output = "$projectDir/build/reports"
//        filters = ".*/resources/.*,.*/build/.*"
//        config = "$project.parent.projectDir/quality/detekt.yml"
//        baseline = "$project.parent.projectDir/quality/baseline.xml"
//    }
//}
